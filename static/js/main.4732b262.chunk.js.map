{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","selectedTodo","todos","setModalOpened","handleDataModal","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setQuery","query","selectedFilter","setSelectedFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","clearDataModal","useState","user","setUser","error","setError","useEffect","loadUser","a","userId","loadedUser","color","href","email","name","App","setTodos","setSelectedTodo","loader","setLoader","modalOpened","visibleTodos","useMemo","normQuery","toLowerCase","trim","filteredTodos","filter","includes","getTodo","useCallback","loadedTodo","openDataModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4732b262.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null\n  todos: Todo[];\n  setModalOpened: (modalOpened: boolean) => void;\n  handleDataModal: (Todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  selectedTodo,\n  todos,\n  setModalOpened,\n  handleDataModal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              {todo.id === selectedTodo?.id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      handleDataModal(todo);\n                      setModalOpened(true);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setQuery: (query: string) => void;\n  query: string\n  selectedFilter: string\n  setSelectedFilter: (selectedFilter: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setQuery,\n  query,\n  selectedFilter,\n  setSelectedFilter,\n}) => {\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectedFilter(value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  clearDataModal: ()=> void\n  selectedTodo: Todo | null\n  setModalOpened: (modalOpened: boolean) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  clearDataModal,\n  selectedTodo,\n  setModalOpened,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const loadedUser = await getUser(selectedTodo?.userId || 0);\n\n        setUser(loadedUser);\n      } catch {\n        setError(true);\n      }\n    };\n\n    loadUser();\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setModalOpened(false);\n                clearDataModal();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            {error && (\n              <h2 style={{ color: 'red' }}>\n                Loading error\n              </h2>\n            )}\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loader, setLoader] = useState(true);\n  const [modalOpened, setModalOpened] = useState(false);\n\n  const visibleTodos = useMemo(() => {\n    const normQuery = query.toLowerCase().trim();\n    let filteredTodos = [...todos];\n\n    if (normQuery) {\n      filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase().includes(normQuery));\n    }\n\n    switch (selectedFilter) {\n      case 'active':\n        return filteredTodos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return filteredTodos.filter(todo => todo.completed);\n\n      default:\n        return filteredTodos;\n    }\n  }, [query, selectedFilter, todos]);\n\n  const getTodo = useCallback(async () => {\n    try {\n      const loadedTodo = await getTodos();\n\n      setTodos(loadedTodo);\n      setLoader(false);\n    } catch {\n      setLoader(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTodo();\n  }, [getTodo]);\n\n  const clearDataModal = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  const openDataModal = useCallback((todo: Todo | null) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQuery={setQuery}\n                query={query}\n                selectedFilter={selectedFilter}\n                setSelectedFilter={setSelectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader\n                ? <Loader />\n                : (\n                  <TodoList\n                    selectedTodo={selectedTodo}\n                    todos={visibleTodos}\n                    setModalOpened={setModalOpened}\n                    handleDataModal={openDataModal}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {modalOpened && (\n        <TodoModal\n          clearDataModal={clearDataModal}\n          selectedTodo={selectedTodo}\n          setModalOpened={setModalOpened}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}